name: forecast_clima120_baseline2

on:
  workflow_dispatch:
  schedule:
    - cron: "15 6 * * *"  # 06:15 UTC diario

permissions:
  contents: write

jobs:
  run-forecast-clima2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Usa tu requirements.txt del repo (recomendado)
          pip install -r requirements.txt
          # Si no tienes requirements.txt, comenta la línea anterior y descomenta estas:
          # pip install pandas==2.2.2 numpy==1.26.4 scikit-learn==1.2.2 joblib==1.4.2 \
          #             python-dateutil==2.9.0.post0 requests==2.32.3 tensorflow \
          #             requests-cache==1.2.0 retry-requests==2.0.0

      - name: Run forecast (clima120 baseline v2)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python forecast_clima120_baseline2.py
          echo "Archivos generados:"
          ls -l public/ || true
          # Validación: si no existen, falla el job
          test -f public/predicciones2.json
          test -f public/llamadas_por_dia2.json
          test -f public/alertas_clima2.json

      - name: Commit & push output files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Forzar el add de archivos ignorados por .gitignore
          git add -f public/predicciones2.json public/llamadas_por_dia2.json public/alertas_clima2.json
          git commit -m "chore(forecast-clima2): actualizar JSON (*2)" --allow-empty
          git push
